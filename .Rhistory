# Part I
students <- c("Abraham", "Beatrice", "Cory", "Dinah", "Eric", "Felicia")
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
for (student in class){
print(student)
}
}
print(student)
roll_call(students)
# Part II
locker_combinations <- function(class){
# Create the for loop and print the student name and locker combination.
for (student in class){
combination <- sample(33,3)
print(student)
print(combination)
}
}
# Call the function with the student vector as an argument.
locker_combinations(students)
# Part III
for (student in students){
# Create a variable (substring)  that holds the second letter for each student.
for (student in students){
second_letter <- substr(student,2,2)
# Create an if statement to find the names of students where the
# second letter that is an "e".
if (second_letter == 'e'){
print(student)
combination <- sample(33:66,3)
print(combination)
}
}
# Part III
for (student in students){
# Create a variable (substring)  that holds the second letter for each student.
second_letter <- substr(student,2,2)
# Create an if statement to find the names of students where the
# second letter that is an "e".
if (second_letter == 'e'){
print(student)
combination <- sample(33:66,3)
print(combination)
}
}
# Part III
for (student in students){
# Create a variable (substring)  that holds the second letter for each student.
second_letter <- substr(student,2,2)
# Create an if statement to find the names of students where the
# second letter that is an "e".
if (second_letter == 'e'){
print(student)
combination <- sample(33:66,3)
print(combination)
}
}
setwd("~/Documents/UOBootCamp/Student Resources/15-1-Student_Resources/02_Stu_RBasics/Unsolved")
setwd("~/")
# Part III
for (student in students){
# Create a variable (substring)  that holds the second letter for each student.
second_letter <- substr(student,2,2)
# Create an if statement to find the names of students where the
# second letter that is an "e".
if (second_letter == 'e'){
print(student)
combination <- sample(33:66,3)
print(combination)
}
}
source("~/Documents/UOBootCamp/Student Resources/15-1-Student_Resources/02_Stu_RBasics/Unsolved/jr_high_starter.R")
# Part III
for (student in students){
# Create a variable (substring)  that holds the second letter for each student.
second_letter <- substr(student,2,2)
# Create an if statement to find the names of students where the
# second letter that is an "e".
if (second_letter == 'e'){
print(student)
combination <- sample(33:66,3)
print(combination)
}
}
# Part III
for (student in students){
# Create a variable (substring)  that holds the second letter for each student.
second_letter <- substr(student,2,2)
# Create an if statement to find the names of students where the
# second letter that is an "e".
if (second_letter = 'e'){
print(student)
combination <- sample(33:66,3)
print(combination)
}
}
# Create an if statement to find the names of students where the
# second letter that is an "e".
if (second_letter == 'e'){
print(student)
combination <- sample(33:66,3)
print(combination)
}
# Create a variable (substring)  that holds the second letter for each student.
second_letter <- substr(student,2,2)
# Create an if statement to find the names of students where the
# second letter that is an "e".
if (second_letter == 'e'){
print(student)
combination <- sample(33:66,3)
print(combination)
}
for (student in students){
# Create a variable (substring)  that holds the second letter for each student.
second_letter <- substr(student,2,2)
# Create an if statement to find the names of students where the
# second letter that is an "e".
if (second_letter == 'e'){
print(student)
combination <- sample(33:66,3)
print(combination)
}
}
setwd("~/Documents/UOBootCamp/MechaCar_Statistical_Analysis")
library(dplyr)
MechaCar_mpg_data <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
MechaCar_mpg <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,MechaCar_mpg_data)
summary(MechaCar_mpg)
Suspension_Coil_data <- read.csv("Suspension_Coil.csv",stringsAsFactors = F, check.names = F)
total_summary <- Suspension_Coil_data %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
lot_summary <- Suspension_Coil_data %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups='keep')
View(Suspension_Coil_data)
View(Suspension_Coil_data)
View(total_summary)
View(Suspension_Coil_data)
View(Suspension_Coil_data)
View(Suspension_Coil_data)
lot_summary <- Suspension_Coil_data %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
View(Suspension_Coil_data)
lot_summary <- Suspension_Coil_data %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
View(Suspension_Coil_data)
View(Suspension_Coil_data)
View(Suspension_Coil_data)
View(Suspension_Coil_data)
View(Suspension_Coil_data)
Suspension_Coil_data <- read.csv("Suspension_Coil.csv")
total_summary <- Suspension_Coil_data %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
lot_summary <- Suspension_Coil_data %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
View(Suspension_Coil_data)
View(Suspension_Coil_data)
View(MechaCar_mpg_data)
View(Suspension_Coil_data)
View(Suspension_Coil_data)
